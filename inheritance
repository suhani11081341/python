"""
It is very common for an object’s methods to update the values of the object’s attributes,
but it is considered bad practice to create new attributes in a method without initialising
them in the __init__ method
"""
import datetime # we will use this for date objects

class Person:

   def __init__(self, name, surname, birthdate, address, telephone, email):
        self.name = name
        self.surname = surname
        self.birthdate = birthdate

        self.address = address
        self.telephone = telephone
        self.email = email

   def age(self):
    if hasattr(self, "_age"):
        return self._age
    print(hasattr(self,"_age"))
    today = datetime.date.today()

    age = today.year - self.birthdate.year

    if today < datetime.date(today.year, self.birthdate.month, self.birthdate.day):
        age -= 1

    self._age = age
    return age

   def display(self):
        print(self._age,"hey m in display")
        print(hasattr(self,"_age"))

person = Person(
    "Jane",
    "Doe",
    datetime.date(1992, 3, 12), # year, month, day
    "No. 12 Short Street, Greenville",
    "555 456 0987",
    "jane.doe@example.com"
)

print(person.name)
print(person.email)
print(person.age(),person.display(),person.age())
